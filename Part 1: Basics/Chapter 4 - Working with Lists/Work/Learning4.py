# -*- coding: utf-8 -*-
"""PythonCC.Chp4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sAA0pVVM2oRk9C3eqxuGdhq-W99f7lT-

# Working With Lists (Looping)

- For Loops
"""

magicians = ['alice', 'david', 'carolina'] # first we define the list
for magician in magicians: # this line tells Python to pull a name from the list magicians, and associate it with the variable magician
  print(magician.title()) # Python repeats line 2 and 3 for each item in the list

"""We can interpret the above code as follows: "For every magician in the list of magicians, print the magician's name,"

It's good to keep naming conventions simple and intuitive like so:

- for cat in cats:

- for dog in dogs:

- for item in list_of_items:

"""

for magician in magicians:
  print(f"{magician.title()}, that was a great trick!")
  print(f"I can't wait to see your next trick {magician.title()}!\n")
print("Thank you all for the great show!") # This line is not indented, so Python does not count it in the for loop

people = ['alice', 'david', 'carolina']
for freinds in people: #don't forget the colon
  print(f"Hello {freinds.title()}!")
print("\nI hope you guys are ready to code!")

"""# Try it yourself
* 4-1 Pizzas
* 4-2 Animals
"""

#4-1
pizza = ['bacon', 'pinapple', 'jalapeno']
for toppings in pizza:
  print(f"One of my favorite pizzas is {toppings.title()}.")
print("\nHonestly, I just really like pizza!\n")

#4-2
cats = ['tiger', 'cheeta', 'lepord']
for cat in cats:
  print(f" You know, a {cat.title()} would make a cool pet!")

for value in range(1, 5): #range(x, y) function will not print the last number (off by one behavior of computer programming)
 print(value)
print("-----------------------------\n")

for value in range(6): #range(6) gives us a list of number from 0-5
 print(value)
print("-----------------------------\n")

numbers = list(range(1,6)) #wrapping list funcition around range creates a list with assocated range.
print(numbers)
print("-----------------------------\n")

even_numbers = list(range(2,11,2)) #rang(x, y, z) starts at x, and adds z until it passes or reaches y.
print(even_numbers)

# We want to create a list of the first 10 squares, that is, 1^2, 2^2, 3^2, 4^2 and so on..
squares = [] # We start with an empty list called squares
for value in range(1,11): #Loop through each value from 1 to 10
  square = value**2 # Square each value
  squares.append(square) # Add the results to the list until it gets to 10

print(squares) # print the resulting list

squares = []
for value in range(1,11):
  squares.append(value**2) #this is a list comprehension, it allows you to generate the same list in just one line of code
print(squares)

print(min(squares))
print(max(squares))
print(sum(squares))

